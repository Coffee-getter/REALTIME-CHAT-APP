
一、dotenv 

是一个零依赖的模块，它能将环境变量中的变量从 .env 文件加载到 process.env 中。
将环境相关的配置独立于代码之外亦是 The Twelve-Factor App 的要素之一。
1、在项目中安装 dotenv
npm install dotenv -S
2、根目录下创建 .env 文件
HOST=localhost
PORT=3000
MONGOOSE_URL=mongodb://localhost:27017/test
3、根目录下 app.js 下引入 dotenv 并使用
require('dotenv').config({ path: '.env' })
// 使用
console.log(process.env.HOST) // localhost
console.log(process.env.PORT) // 3000
console.log(process.env.MONGOOSE_URL) // mongodb://localhost:27017/test
4、作用：
使用 dotenv 可以让我们免于在各个文件中引入配置文件，也可以很好的解决敏感信息的泄漏，利于后期代码维护，快用起来吧！


二、cors

CORS（Cross-origin resource sharing） “跨域资源共享”
客户端不需要对跨域请求做任何特殊处理。
具体请看https://zhuanlan.zhihu.com/p/24411090


三、socket.io 
什么是WebSocket
传统的客户端和服务器通信协议是HTTP：客户端发起请求，服务端进行响应，服务端从不主动勾搭客户端。
这种模式有个明显软肋，就是同步状态。而实际应用中有大量需要客户端和服务器实时同步状态的场景，比如聊天室、股票行情、在线共享文档等都需要客户端实时拿到服务器的最新状态。
针对这种实时同步的需求，一种简单的方式是轮询，比如每隔5s发一次http请求去拿服务器最新的状态数据。但这种方式会存在数据延迟，浪费带宽等副作用。
更完美的方式是使用WebSocket，浏览器原生支持，W3C标准协议，客户端和服务器建立持久性连接可以互发消息。
socket.io 是一个类库，内部封装了WebSocket，可以在浏览器与服务器之间建立实时通信。
开发一个实时应用主要分两部分：服务端和客户端，socket.io分别提供了相应的模块供我们方便地调用。
具体请看https://www.cnblogs.com/lpl666/p/12986612.html


四、bcrypt
高强度的加密算法
具体请看https://www.cnblogs.com/flydean/p/15292400.html